<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0"><channel><title>QC3284 Blog</title><link>https://QC3284.github.io</link><description>我是QC3284，乐于分享美好事物</description><copyright>QC3284 Blog</copyright><docs>http://www.rssboard.org/rss-specification</docs><generator>python-feedgen</generator><image><url>https://ghproxy.xcqcoo.us.kg/https://raw.githubusercontent.com/QC3284/openwrt-actions-config/main/yilang.png</url><title>avatar</title><link>https://QC3284.github.io</link></image><lastBuildDate>Tue, 30 Jul 2024 14:56:39 +0000</lastBuildDate><managingEditor>QC3284 Blog</managingEditor><ttl>60</ttl><webMaster>QC3284 Blog</webMaster><item><title>Openwrt 原始的README</title><link>https://QC3284.github.io/post/Openwrt%20-yuan-shi-de-README.html</link><description>OpenWRT 原始的 README&#13;
--------&#13;
&#13;
![OpenWrt logo](https://mirror.ghproxy.com/https://raw.githubusercontent.com/istoreos/istoreos/istoreos-22.03/include/logo.png)&#13;
&#13;
OpenWrt Project is a Linux operating system targeting embedded devices. Instead&#13;
of trying to create a single, static firmware, OpenWrt provides a fully&#13;
writable filesystem with package management. This frees you from the&#13;
application selection and configuration provided by the vendor and allows you&#13;
to customize the device through the use of packages to suit any application.&#13;
For developers, OpenWrt is the framework to build an application without having&#13;
to build a complete firmware around it; for users this means the ability for&#13;
full customization, to use the device in ways never envisioned.&#13;
&#13;
Sunshine!&#13;
&#13;
## Development&#13;
&#13;
To build your own firmware you need a GNU/Linux, BSD or MacOSX system (case&#13;
sensitive filesystem required). Cygwin is unsupported because of the lack of a&#13;
case sensitive file system.&#13;
&#13;
### Requirements&#13;
&#13;
You need the following tools to compile OpenWrt, the package names vary between&#13;
distributions. A complete list with distribution specific packages is found in&#13;
the [Build System Setup](https://openwrt.org/docs/guide-developer/build-system/install-buildsystem)&#13;
documentation.&#13;
&#13;
```&#13;
binutils bzip2 diff find flex gawk gcc-6+ getopt grep install libc-dev libz-dev&#13;
make4.1+ perl python3.6+ rsync subversion unzip which&#13;
```&#13;
&#13;
### Quickstart&#13;
&#13;
1. Run `./scripts/feeds update -a` to obtain all the latest package definitions&#13;
   defined in feeds.conf / feeds.conf.default&#13;
&#13;
2. Run `./scripts/feeds install -a` to install symlinks for all obtained&#13;
   packages into package/feeds/&#13;
&#13;
3. Run `make menuconfig` to select your preferred configuration for the&#13;
   toolchain, target system &amp; firmware packages.&#13;
&#13;
4. Run `make` to build your firmware. This will download all sources, build the&#13;
   cross-compile toolchain and then cross-compile the GNU/Linux kernel &amp; all chosen&#13;
   applications for your target system.&#13;
&#13;
### Related Repositories&#13;
&#13;
The main repository uses multiple sub-repositories to manage packages of&#13;
different categories. All packages are installed via the OpenWrt package&#13;
manager called `opkg`. If you're looking to develop the web interface or port&#13;
packages to OpenWrt, please find the fitting repository below.&#13;
&#13;
* [LuCI Web Interface](https://github.com/openwrt/luci): Modern and modular&#13;
  interface to control the device via a web browser.&#13;
&#13;
* [OpenWrt Packages](https://github.com/openwrt/packages): Community repository&#13;
  of ported packages.&#13;
&#13;
* [OpenWrt Routing](https://github.com/openwrt/routing): Packages specifically&#13;
  focused on (mesh) routing.&#13;
&#13;
* [OpenWrt Video](https://github.com/openwrt/video): Packages specifically&#13;
  focused on display servers and clients (Xorg and Wayland).&#13;
&#13;
## Support Information&#13;
&#13;
For a list of supported devices see the [OpenWrt Hardware Database](https://openwrt.org/supported_devices)&#13;
&#13;
### Documentation&#13;
&#13;
* [Quick Start Guide](https://openwrt.org/docs/guide-quick-start/start)&#13;
* [User Guide](https://openwrt.org/docs/guide-user/start)&#13;
* [Developer Documentation](https://openwrt.org/docs/guide-developer/start)&#13;
* [Technical Reference](https://openwrt.org/docs/techref/start)&#13;
&#13;
### Support Community&#13;
&#13;
* [Forum](https://forum.openwrt.org): For usage, projects, discussions and hardware advise.&#13;
* [Support Chat](https://webchat.oftc.net/#openwrt): Channel `#openwrt` on **oftc.net**.&#13;
&#13;
### Developer Community&#13;
&#13;
* [Bug Reports](https://bugs.openwrt.org): Report bugs in OpenWrt&#13;
* [Dev Mailing List](https://lists.openwrt.org/mailman/listinfo/openwrt-devel): Send patches&#13;
* [Dev Chat](https://webchat.oftc.net/#openwrt-devel): Channel `#openwrt-devel` on **oftc.net**.&#13;
&#13;
## License&#13;
&#13;
OpenWrt is licensed under GPL-2.0&#13;
。</description><guid isPermaLink="true">https://QC3284.github.io/post/Openwrt%20-yuan-shi-de-README.html</guid><pubDate>Tue, 30 Jul 2024 14:56:16 +0000</pubDate></item><item><title>如何编译X-WRT</title><link>https://QC3284.github.io/post/ru-he-bian-yi-X-WRT.html</link><description># 编译教程&#13;
&#13;
很多人不知道怎样编译一个自己的固件，这里主要简单介绍大概的编译打包流程，具体的情况还需要大家自己发挥，情况千变万化，大家随机应变。</description><guid isPermaLink="true">https://QC3284.github.io/post/ru-he-bian-yi-X-WRT.html</guid><pubDate>Tue, 30 Jul 2024 10:59:46 +0000</pubDate></item><item><title>OpenWrt：从源码到固件，编译自己的OpenWrt系统</title><link>https://QC3284.github.io/post/OpenWrt%EF%BC%9A-cong-yuan-ma-dao-gu-jian-%EF%BC%8C-bian-yi-zi-ji-de-OpenWrt-xi-tong.html</link><description>本文说明如何一步一步地从源码编译出自己的OpenWrt镜像&#13;
&#13;
# 准备工作&#13;
准备一个GNU/Linux, BSD 或 MacOSX 操作系统。</description><guid isPermaLink="true">https://QC3284.github.io/post/OpenWrt%EF%BC%9A-cong-yuan-ma-dao-gu-jian-%EF%BC%8C-bian-yi-zi-ji-de-OpenWrt-xi-tong.html</guid><pubDate>Tue, 30 Jul 2024 05:13:36 +0000</pubDate></item><item><title>test</title><link>https://QC3284.github.io/post/test.html</link><description>test。</description><guid isPermaLink="true">https://QC3284.github.io/post/test.html</guid><pubDate>Tue, 30 Jul 2024 03:52:02 +0000</pubDate></item></channel></rss>